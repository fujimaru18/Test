/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;


import DAO.CustomerDAO;
import DAO.CategoryDAO;
import DAO.OrderDAO;
import DAO.OrderDetailDAO;
import DAO.ProductDAO;
import Model.CartiItemModel;
import Model.CustomerModel;
import Model.Category;
import Model.OrderDetailModel;
import Model.Product;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Tuong Hue
 */
public class OrderView extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    private JComboBox<Category> comboBoxProduct;
    private int orderId;
    private int customerId;
    OrderDetailDAO orderDetailDAO = new OrderDetailDAO();
    CustomerDAO customerDAO = new CustomerDAO();
    OrderDAO orderDAO = new OrderDAO();

    public OrderView() {
        initComponents();
//        cbproduct();
        this.orderId = orderId;
        getDataTb();
        setCbCate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddOrder = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbProducts = new javax.swing.JComboBox<>();
        txtQuantity = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCartItem = new javax.swing.JTable();
        btnCreateInvoice = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNameCustomer = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNote = new java.awt.TextArea();
        btnUpdateOrder = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbCategories = new javax.swing.JComboBox<>();

        btnAddOrder.setLabel("Tạo đơn hàng");
        btnAddOrder.setName("btnOrder"); // NOI18N
        btnAddOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrderActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Đơn hàng");
        jLabel1.setName(""); // NOI18N

        cbProducts.setName("cbProducts"); // NOI18N
        cbProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProductsActionPerformed(evt);
            }
        });

        txtQuantity.setName("txtQuantity"); // NOI18N

        btnAdd.setLabel("Thêm");
        btnAdd.setName("btnAdd"); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tbCartItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Giá"
            }
        ));
        tbCartItem.setCellSelectionEnabled(true);
        tbCartItem.setFocusTraversalPolicyProvider(true);
        tbCartItem.setInheritsPopupMenu(true);
        tbCartItem.setName("TBCartItem"); // NOI18N
        tbCartItem.setShowHorizontalLines(true);
        jScrollPane2.setViewportView(tbCartItem);

        btnCreateInvoice.setText("Tạo hóa đơn");
        btnCreateInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateInvoiceActionPerformed(evt);
            }
        });

        jLabel7.setText("Tên sản phẩm: ");

        jLabel8.setText("Số lượng: ");

        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel2.setText("Tên khách hàng: ");

        txtNameCustomer.setName("txtNameCustomer"); // NOI18N
        txtNameCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameCustomerActionPerformed(evt);
            }
        });

        jLabel3.setText("Số điện thoại: ");

        txtPhone.setName("txtPhone"); // NOI18N

        jLabel4.setText("Địa chỉ:");

        txtAddress.setName("txtAddress"); // NOI18N

        jLabel5.setText("Ghi chú: ");

        txtNote.setName("txtNote"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtAddress)
                                .addGap(171, 171, 171))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtPhone))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtNameCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNameCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        btnUpdateOrder.setText("Cập nhật");
        btnUpdateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateOrderActionPerformed(evt);
            }
        });

        jLabel6.setText("Danh mục: ");

        cbCategories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCategoriesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addComponent(btnUpdateOrder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCreateInvoice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAddOrder))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbProducts, 0, 206, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(cbCategories, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(btnAdd)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnUpdate))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCategories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbProducts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreateInvoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdateOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrderActionPerformed
        // TOD add your handling code here:
    }//GEN-LAST:event_btnAddOrderActionPerformed

    private void cbProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProductsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbProductsActionPerformed

    private void btnCreateInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateInvoiceActionPerformed
        clearForm();       // TODO add your handling code here:
    }//GEN-LAST:event_btnCreateInvoiceActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TOD  O add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbCartItem.getModel();
        int selectRow = tbCartItem.getSelectedRow();

        if (selectRow != -1) {
            model.removeRow(selectRow);
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn 1 dòng để xóa!");
        }


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void getDataTb() {
        tbCartItem.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int selectedRow = tbCartItem.getSelectedRow();

                if (selectedRow != -1) {
                    DefaultTableModel model = (DefaultTableModel) tbCartItem.getModel();

                    // Lấy dữ liệu từ cột 1 và 2
                    String name = model.getValueAt(selectedRow, 2).toString().trim();
                    String quantity = model.getValueAt(selectedRow, 3).toString();

                    boolean found = false;
                    for (int i = 0; i < cbProducts.getItemCount(); i++) {
                        String item = cbProducts.getItemAt(i).toString().trim();
                        if (item.equalsIgnoreCase(name)) {
                            cbProducts.setSelectedIndex(i);
                            found = true;
                            break;
                        }
                    }
                    if (!found) {
                        System.out.println("Không tìm thấy sản phẩm: " + name + " trong combo box.");
                    }
                    // Đổ lên các JTextField
                    System.out.println(name);
                    cbProducts.setSelectedItem(name);
                    txtQuantity.setText(quantity);
                } else {
                    JOptionPane.showMessageDialog(null, "Hãy chọn một dòng trong bảng!");
                }
            }

        });

    }


    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRow = tbCartItem.getSelectedRow();

        if (selectedRow != -1) {
            try {
                int newQuantity = Integer.parseInt(txtQuantity.getText().trim());
                if (newQuantity <= 0) {
                    JOptionPane.showMessageDialog(null, "Số lượng phải lớn hơn 0!");
                    return;
                }

                DefaultTableModel model = (DefaultTableModel) tbCartItem.getModel();
                model.setValueAt(newQuantity, selectedRow, 3); // Cột số lượng = cột 3 (index bắt đầu từ 0)

                JOptionPane.showMessageDialog(null, "Cập nhật số lượng thành công!");
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập số nguyên hợp lệ!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn dòng cần cập nhật!");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtNameCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameCustomerActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateOrderActionPerformed

    private void cbCategoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCategoriesActionPerformed

        Category selectedCate = (Category) cbCategories.getSelectedItem();
        
        if (selectedCate != null) {
            int cateId = selectedCate.getcategoryId();
            loadProductsByCategory(cateId);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCategoriesActionPerformed

    public void loadProductsByCategory(int categoryId) {
        ProductDAO productDAO = new ProductDAO();
        List<Product> products = productDAO.getByCategoryId(categoryId);

        cbProducts.removeAllItems(); // Xóa cũ
        for (Product product : products) {
            cbProducts.addItem(product);
        }
    }

    public CustomerModel getCustomerInfo() {
        String name = txtNameCustomer.getText().trim();
        String phone = txtPhone.getText().trim();
        String address = txtAddress.getText().trim();

        // Tạo đối tượng CustomerModel (bạn đã tạo class này rồi)
        CustomerModel customer = new CustomerModel();
        customer.setName(name);
        customer.setPhone(phone);
        customer.setAddress(address);

        return customer;
    }

    public List<CartiItemModel> getCartItems() {
        List<CartiItemModel> list = new ArrayList<>();

        DefaultTableModel model = (DefaultTableModel) tbCartItem.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            int id = (int) model.getValueAt(i, 1);
            String name = (String) model.getValueAt(i, 2);
            int quantity = (int) model.getValueAt(i, 3);
            int price = (int) model.getValueAt(i, 4);

            CartiItemModel item = new CartiItemModel(id, name, quantity, price);
            list.add(item);
        }

        return list;
    }

//    public void cbproduct() {
//        ProductDAO productDao = new ProductDAO();
//        List<ProductModel> productList = productDao.getAll();
//
//        cbProducts.removeAllItems();
//        for (ProductModel p : productList) {
//            cbProducts.addItem(p);
//        }
//    }

    public void setCbCate() {
        CategoryDAO catDAO = new CategoryDAO();
        List<Category> catList = catDAO.getAll();

        cbCategories.removeAllItems();
        for (Category cate : catList) {
            cbCategories.addItem(cate);
        }
    }

    public Product getSelectedProduct() {
        return (Product) cbProducts.getSelectedItem();
    }

    public String getCustomerName() {
        return txtNameCustomer.getText().trim();
    }

    public String getPhoneNumber() {
        return txtPhone.getText().trim();
    }

    public String getAddress() {
        return txtAddress.getText().trim();
    }

    public String getNote() {
        return txtNote.getText().trim();
    }

    public String getSelectedProductName() {
        return cbProducts.getSelectedItem().toString();
    }

    public int getSelectedQuantity() {
        return Integer.parseInt(txtQuantity.getText().trim());
    }

    public int getOrderId() {
        return orderId;
    }

    public int getCusId() {
        return customerId;
    }

    public void clearForm() {
        txtNameCustomer.setText("");
        txtPhone.setText("");
        txtAddress.setText("");
        txtQuantity.setText("");

        // Xóa hết dòng trong bảng giỏ hàng
        DefaultTableModel model = (DefaultTableModel) tbCartItem.getModel();
        model.setRowCount(0); // Xóa toàn bộ dòng

        // Nếu có combo box chọn phương thức thanh toán
    }

    public JButton getBtnAddCart() {
        return btnAdd;
    }

    public JButton getBtnAddOrder() {
        return btnAddOrder;
    }

    public JTable getCartTable() {
        return tbCartItem;
    }

    public JButton getCreateInvoice() {
        return btnCreateInvoice;
    }

    public void setCustomerInfo(CustomerModel customer) {
        txtNameCustomer.setText(customer.getName());
        txtPhone.setText(customer.getPhone());
        txtAddress.setText(customer.getAddress());
        txtNote.setText(customer.getNote());
    }

    public void setCartItems(List<OrderDetailModel> details) {
        DefaultTableModel model = (DefaultTableModel) tbCartItem.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ
        int stt = 1;
        for (OrderDetailModel item : details) {
            model.addRow(new Object[]{
                stt++,
                item.getProductId(),
                item.getProductName(), // hoặc phải JOIN để lấy tên nếu chưa có
                item.getQuantity(),
                item.getUnitPrice(),});
        }
    }

    public void setCurrentOrderId(int orderId) {
        this.orderId = orderId;
    }

    public void setCusId(int customerId) {
        this.customerId = customerId;
    }

    public JButton getBtnUpdate() {
        return btnUpdateOrder;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddOrder;
    private javax.swing.JButton btnCreateInvoice;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateOrder;
    private javax.swing.JComboBox<Object> cbCategories;
    private javax.swing.JComboBox<Object> cbProducts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbCartItem;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtNameCustomer;
    private java.awt.TextArea txtNote;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
